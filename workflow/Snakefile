import os
from snakemake.utils import min_version

# ------------- min snakemake version ------------
min_version("6.7.0")


# ------------- setup ------------
configfile: "config/config.yaml"


report: "report/workflow.rst"


# ------------- load rules ------------


include: "rules/common.smk"


if process_from_bcl:

    include: "rules/demultiplex.smk"


if run_qc or process_from_bcl:

    include: "rules/qc.smk"


include: "rules/align.smk"
include: "rules/sc.smk"


# ------------- workflow ------------


if process_from_bcl:

    rule all:
        input:
            get_bcl2fastq_output(),
            get_mergelanes_output(),
            get_fastqc_output(),
            get_fastqscreen_output(),
            "results/multiqc/multiqc_report.html",
            get_trim_barcode_output(),
            get_align_output(),
            get_exon_mapping_output(),
            get_sc_demultiplex_output(),
            get_sc_gene_counting_output(),
            get_create_sce_object_output(),
            get_create_report_output(),


elif run_qc:

    rule all:
        input:
            get_fastqc_output(),
            get_fastqscreen_output(),
            "results/multiqc/multiqc_report.html",
            get_trim_barcode_output(),
            get_align_output(),
            get_exon_mapping_output(),
            get_sc_demultiplex_output(),
            get_sc_gene_counting_output(),
            get_create_sce_object_output(),
            get_create_report_output(),


else:

    rule all:
        input:
            get_trim_barcode_output(),
            get_align_output(),
            get_exon_mapping_output(),
            get_sc_demultiplex_output(),
            get_sc_gene_counting_output(),
            get_create_sce_object_output(),
            get_create_report_output(),
